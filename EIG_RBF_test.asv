
addpath('functions/BOED')
addpath('functions/DA')
addpath('functions/IMR simulation')
addpath('functions/RBF')

%%


N = 10000;

theta = rand(N,1);

Nd = 100;

d = linspace(0,1,Nd);

mu_NMC = zeros(Nd,1);

grad_NMC = zeros(Nd,1);

figure;

xlim([0 1]); 

ylim([2 4]);

axis square tight;

for j = 1:Nd

    Y =  theta.^3*d(j)^2+theta.*exp(-abs(0.2-d(j)));

    J = 2*theta.^3*d(j)+sign(0.2-d(j))*theta.*exp(-abs(0.2-d(j)));


% [mu_NMC_j,~,] =  NMC_est(Y, [], 1e-4,'data');
% mu_NMC(j)        =  mean(mu_NMC_j);
% 
% scatter(d(j),mu_NMC(j),'k.'); hold on; drawnow;

[grad_NMC_j,~,] =  EIG_grad_est({Y,J}, [], 1e-4,'data');
grad_NMC(j)        =  mean(grad_NMC_j,1);

scatter(d(j),grad_NMC(j),'k.'); hold on; drawnow;


end





%%    test 1


N = 20000;

N_sample = 100;

theta = rand(N,1);

theta_sample = theta(1:N_sample);

Nd = 100;

d = linspace(0,1,Nd);

mu_NMC = zeros(Nd,1);


k= 40;

[Nearest_Idx] = nearest_interp([theta(:) zeros(N,1)],[theta_sample(:) zeros(N_sample,1)],k);


[I]     =     RBF_PHS_interp([theta(:) zeros(N,1)],[theta_sample(:) zeros(N_sample,1)],Nearest_Idx,6,'1',3,1);



figure;

xlim([0 1]); 

ylim([2 4]);

axis square tight;

for j = 1:Nd

    Y_sample =  theta_sample.^3*d(j)^2+theta_sample.*exp(-abs(0.2-d(j)));

    Y = I*Y_sample;

[mu_NMC_j,~,] =  NMC_est(Y, [], 1e-4,'data');
mu_NMC(j)        =  mean(mu_NMC_j);

scatter(d(j),mu_NMC(j),'k.'); hold on; drawnow;

end




%%    test2:3D


N = 2e4;

N_sample = 100;

% theta = [0.5 + 0.3.*randn(N,1) 0.3 + 0.7.*randn(N,1) 0.5 + 0.8.*randn(N,1)];

theta = [normrnd(0.5,0.3,N,1) normrnd(0.3,0.7,N,1) normrnd(0.5,0.8,N,1)];

theta_sample = theta(1:N_sample,:);

Nd = 11;

d = linspace(0,1,Nd);

mu_NMC = zeros(Nd,1);




CMAME2025_data = [1.83 2 2.137 2.115 2.105 2.106 2.119 2.139 2.169 2.202 2.250];


figure;

plot(d, CMAME2025_data,'b*'); hold on;

axis square tight;


ylim([1.7 2.3]);


for j = 1:Nd

     for k = 1:10

         theta = [normrnd(0.5,0.3,N,1) normrnd(0.3,0.7,N,1) normrnd(0.5,0.8,N,1)];

         k_std = 3.5;

         theta_target = theta;

         mu_theta = [0.5 0.3 0.5];
         sigma_theta = [0.3^2 0.7^2 0.8^2];

         boundary_idx = (theta_target(:,1) -mu_theta(1)).^2/((sigma_theta(1))*k_std^2)+(theta_target(:,2) -mu_theta(2)).^2/((sigma_theta(2))*k_std^2)+(theta_target(:,3) -mu_theta(3)).^2/((sigma_theta(3))*k_std^2)>1;

         idx_all = 1:N;

         params_idx = [randi([1 N],N_sample,1); (idx_all(boundary_idx ))'];

         params_idx  = unique( params_idx,'rows');

         theta_sample =  theta_target(params_idx,:);

         [Nearest_Idx] = nearest_interp_3d(theta ,theta_sample,30);


         [I]     =     RBF_PHS_interp_3d(theta ,theta_sample,Nearest_Idx,25,'1',3,2);


         Y_sample =  theta_sample(:,1).^3*d(j)^2+theta_sample(:,2).*exp(-abs(0.2-d(j)))+sqrt(theta_sample(:,3).^2*d(j)*2);

        Y = I*Y_sample;

        Y0 =  theta(:,1).^3*d(j)^2+theta(:,2).*exp(-abs(0.2-d(j)))+sqrt(2*theta(:,3).^2*d(j)^1);

        Y1 =  theta(:,1).^3*d(j)^2+theta(:,2).*exp(-abs(0.2-d(j)))+sqrt(1*theta(:,3).^2*d(j)^2);

        %
        [mu_NMC_j,~,] =  NMC_est_mixed(Y, [], [],'data');
        mu_NMC(j,k)        =  mean(mu_NMC_j);


        % [mu_NMC_j0,~,] =  NMC_est_mixed(Y0, [], [],'data');
        % mu_NMC0(j,k)        =  mean(mu_NMC_j0);

        % [mu_NMC_j1,~,] =  NMC_est_mixed(Y1, [], [],'data');
        % mu_NMC1(j)        =  mean(mu_NMC_j1);

         scatter(d(j),mu_NMC(j,k),'k.'); hold on;

        scatter(d(j),mu_NMC0(j,k),'ro'); hold on;

        % scatter(d(j),mu_NMC1(j),'k.'); hold on;

        ylim([1.7 2.3]);

        drawnow;

     end

end


xlabel('d'); ylabel('EIG')


% 
% xlim([0 1]); 
% 
% ylim([0.5 2.5]);




%%    test3:NHKV IMR  



model_true = 'neoHook';  

mu_theta          =  [15090 0.209 0];
sigma_theta       =  ([4350 0 0; 0 0.1 0; 0 0 0]).^2;

N_target = 4000;

theta_target =  mvnrnd(mu_theta,sigma_theta,N_target);


boundary_idx = (theta_target(:,1) >mu_theta(1)+sqrt(sigma_theta(1,1))*3| theta_target(:,1) <mu_theta(1)-sqrt(sigma_theta(1,1))*3) | (theta_target(:,2) >mu_theta(2)+sqrt(sigma_theta(2,2))*3| theta_target(:,2) <mu_theta(2)-sqrt(sigma_theta(2,2))*3);

idx_all = 1:N_target;

params_idx = [(1:200)'; (idx_all(boundary_idx ))'];

params_idx  = unique( params_idx,'rows');

 theta_params =  theta_target(params_idx,:);


tic

Design = [150, 0.3];

  [t,y2,U2,dt] = IMR_simulations(theta_target,Design,model_true,60);

toc


figure; 

plot(t,y2,'k-')


sigma_w = @(y) noise_fun(t,y);


idx = 3789;

figure; 

plot(t,y2(idx,:),'k-'); hold on;
plot(t,y2(idx,:)+sqrt(sigma_w(y2(idx,:)))*2,'r--');
plot(t,y2(idx,:)-sqrt(sigma_w(y2(idx,:)))*2,'r--');

ylim([0 1.2])

% diag(1e-4*ones(1,61))

xlabel('t')
ylabel('R')


figure;

for j = 1:7

     lj = 1000 + (j-1)*500;

    [mu_NMC_j,~,] =  NMC_est(y2(1:lj,:), [], sigma_w,'data');
    mu_NMC(j)        =  mean(mu_NMC_j);

    scatter(j, mu_NMC(j) ,'ro'); hold on; 

    drawnow;

end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


k= 40;

[Nearest_Idx] = nearest_interp(theta_target(:,1:2),theta_params(:,1:2),k);


[I]     =     RBF_PHS_interp(theta_target(:,1:2),theta_params(:,1:2),Nearest_Idx,15,'1',3,2);


y_interp = I*y2(params_idx,:);


target_idx = 910;

[t,y_target,U_target,dt] = IMR_simulations(theta_target(target_idx,:),Design,model_true,60);


figure; 

subplot(2,1,1)


plot(t,y_target,'ro-'); hold on;

plot(t,y_interp(target_idx,:),'b*-'); hold on;

 plot(t,y2(Nearest_Idx(target_idx,1:15),:),'k:'); hold on;

ylim([0 1])

legend('target','interpolation')

xlabel('t')

ylabel('R')



subplot(2,1,2)

scatter(theta_params(:,1),theta_params(:,2),'b.'); axis square tight; hold on; 

scatter(theta_target(target_idx,1), theta_target(target_idx,2),'r*');

 % scatter(theta_target(:,1), theta_target(:,2),'r*');

scatter(theta_params(Nearest_Idx(target_idx,1:15),1),theta_params(Nearest_Idx(target_idx,1:15),2),'ko');

xlabel('G');
ylabel('\mu')

legend('samples','target','neighbors')



figure;


for j = 1:20

    [mu_NMC_j,~,] =  NMC_est(y2(1:end,:), [], sigma_w,'data');
    mu_NMC(j)        =  mean(mu_NMC_j);

    scatter(j, mu_NMC(j) ,'ro'); hold on; 

    [mu_NMC_j,~,] =  NMC_est(y_interp(1:end,:), [], sigma_w,'data');
    mu_NMC_interp(j)        =  mean(mu_NMC_j);

    scatter(j, mu_NMC_interp(j) ,'b*'); hold on; 

    ylim([0 3])
    drawnow;


end





%% Generate data




model_true = 'neoHook';  

mu_theta          =  [15090 0.209 0];
sigma_theta       =  ([4350 0 0; 0 0.1 0; 0 0 0]).^2;


N_target = 10000;


for j = 1:30


    theta_target =  mvnrnd(mu_theta,sigma_theta,N_target);


    tic


Design = [unifrnd(100,1000,[1 1]) unifrnd(0.14,0.3,[1 1])];

    [t,y2,U2,dt] = IMR_simulations(theta_target,Design,model_true,60);

    toc


    data = {y2,theta_target};


  data_filename =  ['data_10k/Rt', '_We',num2str(round(Design(1)),'%i'),'_Req', ...
    num2str(Design(2),'%.2f') '.mat']; % name of file containing R vs T data

  save(data_filename,'data','-v7.3')

end



%%  read data


t = linspace(0,3,61);

sigma_w = @(y) noise_fun(t,y);


model_true = 'neoHook';  

mu_theta          =  [15090 0.209 0];
sigma_theta       =  ([4350 0 0; 0 0.1 0; 0 0 0]).^2;

design_available = [894 0.21;876 0.25; 875 0.21; 833 0.24; 814 0.27; 789 0.16; 776 0.17; 757 0.15; 619 0.30; 600 0.30; 539 0.16;...
    526 0.18; 516 0.22; 477 0.16; 446 0.30; 395 0.25; 339 0.19; 188 0.25; 187 0.24; 178 0.18; 150 0.30];


norm_fun_log = @(mu, Sigma, x)  +(((x-mu)/(1*Sigma))*(x-mu)' );  % removed the constant here


figure;

for j = 1:length(design_available)

    Design = design_available(j,:);

    data_filename =  ['data/Rt', '_We',num2str(round(Design(1)),'%i'),'_Req', ...
        num2str(Design(2),'%.2f') '.mat']; % name of file containing R vs T data

    load(data_filename);

    y2 = data{1}; theta_target = data{2};

    N_target = length(theta_target);

     k_std = 3.25;

    boundary_idx = (theta_target(:,1) -mu_theta(1)).^2/((sigma_theta(1,1))*k_std^2)+(theta_target(:,2) -mu_theta(2)).^2/((sigma_theta(2,2))*k_std^2)>1;

    idx_all = 1:N_target;

    params_idx = [(1:200)'; (idx_all(boundary_idx ))'];

    params_idx  = unique( params_idx,'rows');

    theta_params =  theta_target(params_idx,:);


    k= 30;

    [Nearest_Idx] = nearest_interp(theta_target(:,1:2),theta_params(:,1:2),k);


    [I]     =     RBF_PHS_interp(theta_target(:,1:2),theta_params(:,1:2),Nearest_Idx,20,'1',3,2);

    y_interp = I*y2(params_idx,:);
    y_interp(params_idx,:) = y2(params_idx,:);

    [mu_NMC_j,~,] =  NMC_est(y2(1:end,:), [], sigma_w,'data');
    mu_NMC(j)        =  mean(mu_NMC_j);

    scatter3(Design(1),Design(2), mu_NMC(j) ,'ro'); hold on;

    [mu_NMC_j,~,] =  NMC_est(y_interp(1:end,:), [], sigma_w,'data');
    mu_NMC_interp(j)        =  mean(mu_NMC_j);

    scatter3(Design(1),Design(2), mu_NMC_interp(j) ,'b*'); hold on;

    axis square tight;


    xlim([100 1000]);

    ylim([0.14 0.3]);

     zlim([0 7]);

    drawnow;

clear data y2 theta_target

end


xlabel('We')
ylabel('Req')
zlabel('EIG')


%%


[Xgrid,Ygrid]    =  meshgrid(linspace(100,1000),...
    linspace(0.14,0.3));

  XYgrid              =  [Xgrid(:), Ygrid(:)];

  mdl = fitrgp(design_available,mu_NMC(1:21),'KernelFunction','ardmatern52',...
            'OptimizeHyperparameters','auto','HyperparameterOptimizationOptions',...
            struct('AcquisitionFunctionName','expected-improvement-plus'));

  [y_pred,std]        =  predict(mdl,XYgrid);

  mdl_interp = fitrgp(design_available,mu_NMC_interp(1:21),'KernelFunction','ardmatern52',...
            'OptimizeHyperparameters','auto','HyperparameterOptimizationOptions',...
            struct('AcquisitionFunctionName','expected-improvement-plus'));

  [y_pred_interp,std_interp]        =  predict(mdl_interp,XYgrid);


figure; 

subplot(1,2,1)

surf(Xgrid,Ygrid,reshape(y_pred,100,100)); shading interp; hold on;

    scatter3(design_available(:,1),design_available(:,2), mu_NMC(1:21) ,'ro'); hold on;
   axis square tight;


    xlim([100 1000]);

    ylim([0.14 0.3]);

    zlim([0 3]);

    xlabel('We')
ylabel('Req')
zlabel('EIG')

subplot(1,2,2)

surf(Xgrid,Ygrid,reshape(y_pred_interp,100,100)); shading interp; hold on;

    scatter3(design_available(:,1),design_available(:,2), mu_NMC_interp(1:21) ,'b*'); hold on;
   axis square tight;


    xlim([100 1000]);

    ylim([0.14 0.3]);

    zlim([0 3]);

    xlabel('We')
ylabel('Req')
zlabel('EIG')






%%  test for error


t = linspace(0,3,61);

sigma_w = @(y) noise_fun(t,y);


model_true = 'neoHook';  

mu_theta          =  [15090 0.209 0];
sigma_theta       =  ([4350 0 0; 0 0.1 0; 0 0 0]).^2;

% design_available = [894 0.21;876 0.25; 875 0.21; 833 0.24; 814 0.27; 789 0.16; 776 0.17; 757 0.15; 619 0.30; 600 0.30; 539 0.16;...
%     526 0.18; 516 0.22; 477 0.16; 446 0.30; 395 0.25; 339 0.19; 188 0.25; 187 0.24; 178 0.18; 150 0.30];

design_available = [203 0.27];

norm_fun_log = @(mu, Sigma, x)  +(((x-mu)/(1*Sigma))*(x-mu)' );  % removed the constant here


% for j = 1:length(design_available)

j = 1;

Design = design_available(j,:);

data_filename =  ['data_10k/Rt', '_We',num2str(round(Design(1)),'%i'),'_Req', ...
    num2str(Design(2),'%.2f') '.mat']; % name of file containing R vs T data

load(data_filename);

y2 = data{1}; theta_target = data{2};

N_target = length(theta_target);

k_std = 3.25;

boundary_idx = (theta_target(:,1) -mu_theta(1)).^2/((sigma_theta(1,1))*k_std^2)+(theta_target(:,2) -mu_theta(2)).^2/((sigma_theta(2,2))*k_std^2)>1;

idx_all = 1:N_target;

% params_idx = [(1:200)'; (idx_all(boundary_idx ))'];


figure;

for j1 = 1:10

    params_idx = [randi([1 N_target],j1*100,1); (idx_all(boundary_idx ))'];

    params_idx  = unique( params_idx,'rows');

    theta_params =  theta_target(params_idx,:);


    k= 30;

    [Nearest_Idx] = nearest_interp(theta_target(:,1:2),theta_params(:,1:2),k);


    [I]     =     RBF_PHS_interp(theta_target(:,1:2),theta_params(:,1:2),Nearest_Idx,20,'1',3,2);

    y_interp = I*y2(params_idx,:);
    y_interp(params_idx,:) = y2(params_idx,:);

    [mu_NMC_j,~,] =  NMC_est(y2(1:end,:), [], sigma_w,'data');
    mu_NMC(j1)        =  mean(mu_NMC_j);

    scatter(j1*100, mu_NMC(j1) ,'ro'); hold on;

    [mu_NMC_j,~,] =  NMC_est(y_interp(1:end,:), [], sigma_w,'data');
    mu_NMC_interp(j1)        =  mean(mu_NMC_j);

    scatter(j1*100, mu_NMC_interp(j1) ,'b*'); hold on;

    axis square tight;


    xlim([0 10]);

    % ylim([0 7]);

    drawnow;

end


figure; plot(mu_NMC,'ro'); hold on; plot(mu_NMC_interp,'b*'); hold on; 

xlabel('We')
ylabel('Req')
zlabel('EIG')



